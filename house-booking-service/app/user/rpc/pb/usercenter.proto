syntax = "proto3";

option go_package = "./pb";
package pb;

// User Data Structure
message User {
  int64 ID = 1;
  string email = 2;
  string nickname = 3;
  int64 sex = 4;
  string avatar = 5;
  string info = 6;
}

//User Authorization Info
message UserAuth {
  int64 id = 1;
  int64 userId = 2;
  string authType = 3;
  string authKey = 4;
}

//SignIn req
message SignInReq {
  string authType = 1;
  string authKey = 2;
  string password = 3;
}

//Sign Resp
message SignInResp {
  string accessToken = 1;
  int64 accessExpire = 2;
  int64 refreshAfter = 3;
}

//SignUp Req
message SignUpReq {
  string email = 1;
  string password = 2;
  string name = 3;
  string authKey = 4;
  string authType = 5;
}

//SignIn Resp
message SignUpResp {
  string accessToken = 1;
  int64 accessExpire = 2;
  int64 refreshAfter = 3;
}

//Get user info req
message GetUserInfoReq {
  int64 id = 1;
}

//Get user info resp
message GetUserInfoResp {
  User userInfo  = 1;
}

//Auth by key , id and token
message GetUserAuthByAuthKeyReq {
  string AuthType  = 1;
  string AuthKey = 2;
}
message GetUserAuthByAuthKeyResp {
  UserAuth userAuth = 1;
}

message GetUserAuthByUserIdReq {
  int64 userID = 1;
  string AuthType = 2;
}
message GetUserAuthByUserIdResp {
  UserAuth userAuth = 1;
}

message GenerateTokenReq {
  int64 userID = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64 accessExpire = 2;
  int64 refreshAfter = 3;
}

service UserCenter {
  rpc SignIn(SignInReq) returns (SignInResp);
  rpc SignUp(SignUpReq) returns (SignUpResp);
  rpc GetUserInfo(GetUserInfoReq) returns (GetUserInfoResp);
  rpc GetUserInfoByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc GetUserInfoByUserID(GetUserAuthByUserIdReq) returns (GetUserAuthByUserIdResp);
  rpc GenerateToken(GenerateTokenReq) returns (GenerateTokenResp);
}
