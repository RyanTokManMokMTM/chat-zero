syntax = "v1"
//
//info(
//    title: "type title here"
//    desc: "type desc here"
//    author: "type author here"
//    email: "type email here"
//    version: "type version here"
//)


type (
    AddFriendReq struct{
        UserID uint `json:"user_id"`
    }
    AddFriendResp struct{
        Message string  `json:"message"`
    }

    RemoveFriendReq struct {
        FriendID uint `json:"user_id"`
    }
    RemoveFriendResp struct {}

    AcceptFriendNotificationReq struct{
        RequestID uint `json:"request_id"`
    }
    AcceptFriendNotificationResp struct{
        Message string  `json:"message"`
    }

    DeclineFriendNotificationReq struct{
        RequestID uint `json:"request_id"`
    }
    DeclineFriendNotificationResp struct{
        Message string  `json:"message"`
    }

    CancelFriendNotificationReq struct{
        RequestID uint `json:"request_id"`
    }
    CancelFriendNotificationResp struct{
        Message string  `json:"message"`
    }

    GetFriendRequestReq struct {}
    GetFriendRequestResp struct {
        Requests []FriendRequest `json:"requests"`
    }
)

type FriendRequest struct {
    RequestID uint `json:"request_id"`
    Sender uint `json:"sender"`
}

@server (
    group : friend
    jwt : Auth
)
service Chat-Zero {
    @handler AddFriend
    post /friend(AddFriendReq) returns (AddFriendResp);

    @handler GetFriendRequest
    get /friend/requests(GetFriendRequestReq) returns (GetFriendRequestResp);


    @handler RemoveFriend
    delete /friend(RemoveFriendReq) returns (RemoveFriendResp);

    @handler AcceptFriendRequest
    post /friend/request/accept(AcceptFriendNotificationReq) returns (AcceptFriendNotificationResp);

    @handler CancelFriendRequest
    patch /friend/request/cancel(CancelFriendNotificationReq) returns (CancelFriendNotificationResp);

    @handler DeclineFriendRequest
    patch /friend/request/decline(DeclineFriendNotificationReq) returns (DeclineFriendNotificationResp);
}
