// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	check "gtihub.com/ryantokmanmokmtm/chat-zero/internal/handler/check"
	friend "gtihub.com/ryantokmanmokmtm/chat-zero/internal/handler/friend"
	room "gtihub.com/ryantokmanmokmtm/chat-zero/internal/handler/room"
	user "gtihub.com/ryantokmanmokmtm/chat-zero/internal/handler/user"
	"gtihub.com/ryantokmanmokmtm/chat-zero/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: check.PingHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/signup",
				Handler: user.UsersignupHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/signin",
				Handler: user.UsersigninHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user/profile",
				Handler: user.GetuserprofileHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/friend",
				Handler: friend.AddFriendHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/friend/requests",
				Handler: friend.GetFriendRequestHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/friend",
				Handler: friend.RemoveFriendHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/friend/request/accept",
				Handler: friend.AcceptFriendRequestHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/friend/request/cancel",
				Handler: friend.CancelFriendRequestHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/friend/request/decline",
				Handler: friend.DeclineFriendRequestHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/room",
				Handler: room.CreateRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/room",
				Handler: room.DeleteRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/room/join/:room_id",
				Handler: room.JoinRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/room/leave/:room_id",
				Handler: room.LeaveRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/room/members/:room_id",
				Handler: room.RoomMembersHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
